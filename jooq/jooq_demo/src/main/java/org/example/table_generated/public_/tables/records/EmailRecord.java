/*
 * This file is generated by jOOQ.
 */
package org.example.table_generated.public_.tables.records;


import org.example.table_generated.public_.tables.Email;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmailRecord extends UpdatableRecordImpl<EmailRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.email.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.email.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.email.date</code>.
     */
    public void setDate(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.email.date</code>.
     */
    public String getDate() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.email.domain</code>.
     */
    public void setDomain(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.email.domain</code>.
     */
    public String getDomain() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.email.emails</code>.
     */
    public void setEmails(String[] value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.email.emails</code>.
     */
    public String[] getEmails() {
        return (String[]) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EmailRecord
     */
    public EmailRecord() {
        super(Email.EMAIL);
    }

    /**
     * Create a detached, initialised EmailRecord
     */
    public EmailRecord(Integer id, String date, String domain, String[] emails) {
        super(Email.EMAIL);

        setId(id);
        setDate(date);
        setDomain(domain);
        setEmails(emails);
        resetChangedOnNotNull();
    }
}
